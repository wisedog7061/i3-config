#######################
# config starts here: #
#######################

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango: Noto Sans Regular 10

# set the mod key to the winkey:
set $mod Mod4

#####################
# workspace layout: #
#####################

# default i3 tiling mode
# default: todo
# stacking: Each window will be fullscreen and tabbed top to bottom.
# tabbed: Each new window will open fullscreen as a tab (left to right)
workspace_layout default

##############################
# extra options for windows: #
##############################

#border indicator on windows:
new_window pixel 1

# thin borders
# hide_edge_borders both

# Set inner/outer gaps
gaps inner 6
gaps outer 3

# show window title bars (not officially supported with i3gaps)
#default_border normal

# window title alignment
#title_align center

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

#set direction keys
set $up k
set $down j
set $left h
set $right l

###################
# include section #
###################

## include keybindings
include ~/.config/i3/config-modules/keybindings/workspace-keybindings.conf
include ~/.config/i3/config-modules/keybindings/actions-keybindings.conf

## include modes
include ~/.config/i3/config-modules/modes/resize-mode.conf

## include workspaces behaviour
include ~/.config/i3/workspaces.conf

# Autostart user specific files (may be set in dex)
include ~/.config/i3/config-modules/autostart.conf

##############
# compositor #
##############

# picom: https://wiki.archlinux.org/title/Picom
# manpage: https://man.archlinux.org/man/picom.1.en
# used config from ${XDG_CONFIG_HOME}/picom/picom.conf
# install picom package (yay -S picom)
exec_always --no-startup-id picom -b

#############################################
# autostart applications/services on login: #
#############################################

#set keyboard layout
exec --no-startup-id setxkbmap -model pc105 -layout us,ru -option grp:caps_toggle -option grp_led:caps

# num lock activated
exec --no-startup-id numlockx on

#get auth work with polkit-gnome
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# dex execute .desktop files + apps using /etc/xdg/autostart.
# pizdec https://habr.com/ru/companies/ruvds/articles/583328/
exec --no-startup-id dex --autostart --environment i3

# start a script to setup displays
exec --no-startup-id ~/.screenlayout/monitor.sh

# set wallpaper
# todo add change background in cron
exec --no-startup-id sleep 1 && feh --bg-fill --recursive --randomize --slideshow-delay 600 ~/Pictures/wallpappers

# set powersavings for display:
# need set dpms is on with zero timers because betterlockscreen set dpms itself
exec --no-startup-id xset s off dpms 0 0 0
exec --no-startup-id xidlehook --not-when-audio --not-when-fullscreen --timer 300 "betterlockscreen --off 15 --quiet --lock" ""

# Desktop notifications
# dunst config used ~/.config/dunst/dunstrc
# set alternative config if needed:
#exec --no-startup-id /usr/bin/dunst --config ~/.config/dunst/dunstrc
# may need to run dbus-launch explicitly: 
#exec --no-startup-id dbus-launch /usr/bin/dunst
exec --no-startup-id /usr/bin/dunst

###############
# system tray #
###############
# if you do not use dex you must start apps one by one

##################
# floating rules #
##################

# todo clean unused
# set floating (nontiling) for apps needing it
for_window [class="Yad" instance="yad"] floating enable
for_window [class="Galculator" instance="galculator"] floating enable
for_window [class="Blueberry.py" instance="blueberry.py"] floating enable

# set floating (nontiling) for special apps
for_window [class="Xsane" instance="xsane"] floating enable
for_window [class="Pavucontrol" instance="pavucontrol"] floating enable
for_window [class="qt5ct" instance="qt5ct"] floating enable
for_window [class="Blueberry.py" instance="blueberry.py"] floating enable
for_window [class="Bluetooth-sendto" instance="bluetooth-sendto"] floating enable
for_window [class="Pamac-manager"] floating enable
for_window [window_role="About"] floating enable

# set position of floating window
for_window [class=".*"] move position center

######################################
# color settings for bar and windows #
######################################

# Define colors variables:
set $darkbluetrans	#08052be6
set $darkblue		#08052b
set $lightblue		#5294e2
set $urgentred		#e53935
set $white		#ffffff
set $black		#000000
set $purple		#e345ff
set $darkgrey		#383c4a
set $grey		#b0b5bd
set $mediumgrey		#8b8b8b
set $yellowbrown	#e1b700

# define colors for windows:
#class		        	border		bground		text		indicator	child_border
client.focused		    	$lightblue	$darkblue	$white		$mediumgrey	$mediumgrey
client.unfocused	    	$darkblue	$darkblue	$grey		$darkgrey	$darkgrey
client.focused_inactive		$darkblue	$darkblue	$grey		$black		$black
client.urgent		    	$urgentred	$urgentred	$white		$yellowbrown	$yellowbrown

############################################
# bar settings (input comes from i3blocks) #
############################################

# Start i3bar to display a workspace bar
# (plus the system information i3status finds out, if available)
bar {
	font pango: Noto Sans Regular 10
	status_command i3blocks -c ~/.config/i3/i3blocks.conf
	mode dock
	position top
	# reference: https://i3wm.org/docs/userguide.html#_tray_output
	tray_output primary
	tray_padding 3

	# When strip_workspace_numbers is set to yes,
	# any workspace that has a name of the form
	# “[n][:][NAME]” will display only the name.
	strip_workspace_numbers yes

	colors {
		separator          $purple
		background         $darkgrey
		statusline         $white
#                          		border 		        bg		txt		indicator
		focused_workspace	$mediumgrey	   	$grey		$darkgrey	$purple
		active_workspace	$lightblue      	$mediumgrey	$darkgrey	$purple
		inactive_workspace	$darkgrey   		$darkgrey	$grey		$purple
		urgent_workspace	$urgentred	    	$urgentred	$white		$purple
	}
}

# you can add different bars for multidisplay setups on each display:
# set output HDMI-0 to the display you want the bar, --transparency can be set.
# Transparency needs rgba color codes to be used where the last two letters are the transparency factor see here:
# https://gist.github.com/lopspower/03fb1cc0ac9f32ef38f4
# #08052be6 --> e6=90%

#####################################
# Application menu handled by rofi: #
#####################################

## rofi bindings fancy application menu
bindsym $mod+d exec --no-startup-id rofi -modi drun -show drun \
		-config ~/.config/rofi/rofidmenu.rasi

#bindsym F9 exec --no-startup-id rofi -modi drun -show drun \
#		-config ~/.config/rofi/rofidmenu.rasi

## rofi bindings for window menu ($mod+t /F10 optional disabled)

#bindsym $mod+t exec --no-startup-id rofi -show window \
#		-config ~/.config/rofi/rofidmenu.rasi

#bindsym F10 exec --no-startup-id rofi -show window \
#		-config ~/.config/rofi/rofidmenu.rasi

## rofi bindings to manage clipboard (install rofi-greenclip from the AUR)

#exec --no-startup-id greenclip daemon>/dev/null
#bindsym $mod+c exec --no-startup-id rofi -modi "clipboard:greenclip print" -show clipboard \
#		-config ~/.config/rofi/rofidmenu.rasi
